language: ruby
sudo: false
dist: trusty
rvm:
  - 2.4.2
  # - 2.2.0 # necessary for docker

before_install:
  - echo "before_install"
  # - install terraform

install:
  - echo "install"
  - gem install bundler --no-rdoc --no-ri
  - bundle install
  - wget https://releases.hashicorp.com/terraform/0.10.6/terraform_0.10.6_linux_amd64.zip
  - unzip terraform_0.10.6_linux_amd64
  - chmod +x terraform
  - mkdir -p ${HOME}/bin
  - export PATH=${PATH}:${HOME}/bin
  - mv terraform ${HOME}/bin/
  - terraform -v
  - export TF_VAR_region="us-west-2"

before_script:
  - echo 'before_script'
  # - docker pull hashicorp/terraform:light
  # - docker run -i -t -v $(pwd):/app/ -w /app/ hashicorp/terraform:light init
  # - docker run -i -t -v $(pwd):/app/ -w /app/ hashicorp/terraform:light fmt -check=true
  # - docker run -i -t -v $(pwd):/app/ -w /app/ hashicorp/terraform:light validate
  - terraform init
  - terraform fmt -check=true
  - terraform validate
  - cd examples/test_fixtures
  - tail -n30 main.tf
  - sed -i.bak 's/source = \"\.\.\/\.\.\/\"/sources = "\..\/.."/g' main.tf # 3 dirs back to 2
  - tail -n30 main.tf
  - terraform init
  - terraform fmt -check=true
  - terraform validate
  # - sed -i.bak 's/source = \"\.\.\/\.\.\"/source = "..\/..\/../g' main.tf # 2 dirs back to 3
  - mv main.tf.bak main.tf

script:
  - echo 'before_script'
  - kitchen test --destroy always

# after_success:
#   - echo 'foo'

# after_failure:
#   - echo 'foo'

before_deploy:
# create new release in github? check if this is new release?
  - echo 'before_deploy phase'


deploy:
  provider: script
  script: scripts/deploy.sh
  on:
    branch: dev

# after_deploy:
#   - echo 'foo'

# after_script:
#   - echo 'foo'
